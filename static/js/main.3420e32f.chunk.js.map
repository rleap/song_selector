{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","_this","this","props","songs","map","song","react_default","a","createElement","className","key","title","onClick","selectSong","renderList","React","Component","connect","state","type","payload","selectedSong","_ref","duration","App","components_SongList","components_SongDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","querySelector"],"mappings":"8NAIMA,uLACS,IAAAC,EAAAC,KACX,OAAOA,KAAKC,MAAMC,MAAMC,IAAI,SAAAC,GAC1B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAKM,OAC9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,oBACVG,QAAS,kBAAMZ,EAAKE,MAAMW,WAAWR,KAFvC,WAOFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAKM,2CAOrC,OAAOL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBR,KAAKa,qBApB3BC,IAAMC,WA4BdC,cAJS,SAAAC,GACtB,MAAO,CAAEf,MAAOe,EAAMf,QAKtB,CAAEU,WCjCsB,SAAAR,GAExB,MAAO,CACLc,KAAM,gBACNC,QAASf,KD2BEY,CAGblB,GEZakB,cAJS,SAAAC,GACtB,MAAO,CAAEb,KAAMa,EAAMG,eAGRJ,CApBI,SAAAK,GAAc,IAAXjB,EAAWiB,EAAXjB,KACpB,OAAKA,EAIHC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,mBACUH,EAAKM,MACbL,EAAAC,EAAAC,cAAA,WAFF,aAGaH,EAAKkB,WARbjB,EAAAC,EAAAC,cAAA,qCCcIgB,EAfH,WACV,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACiB,EAAD,OAEFnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACkB,EAAD,UCQKC,cAAgB,CAC7BxB,MAnBmB,WACnB,MAAO,CACL,CAAEQ,MAAO,wBAAyBY,SAAU,QAC5C,CAAEZ,MAAO,YAAaY,SAAU,QAChC,CAAEZ,MAAO,qBAAsBY,SAAU,QACzC,CAAEZ,MAAO,qBAAsBY,SAAU,QACzC,CAAEZ,MAAO,SAAUY,SAAU,UAc/BF,aAV0B,WAAiC,IAAhCA,EAAgCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,MAAoB,kBAAhBC,EAAOZ,KACFY,EAAOX,QAGTC,KCTTW,IAASC,OACP3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IAC3B/B,EAAAC,EAAAC,cAAC8B,EAAD,OAEFC,SAASC,cAAc","file":"static/js/main.3420e32f.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSong } from \"../actions\";\n\nclass SongList extends React.Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return (\n        <div className=\"item\" key={song.title}>\n          <div className=\"right floated content\">\n            <button\n              className=\"ui button primary\"\n              onClick={() => this.props.selectSong(song)}\n            >\n              Select\n            </button>\n          </div>\n          <div className=\"content\">{song.title}</div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { songs: state.songs };\n};\n\nexport default connect(\n  mapStateToProps,\n  { selectSong }\n)(SongList);\n","// Action creator\nexport const selectSong = song => {\n  // Return an action\n  return {\n    type: \"SONG_SELECTED\",\n    payload: song\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Please select a song</div>;\n  }\n  return (\n    <div>\n      <h3>Details for:</h3>\n      <p>\n        Title: {song.title}\n        <br />\n        Duration: {song.duration}\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { song: state.selectedSong };\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from \"react\";\nimport SongList from \"./SongList\";\nimport SongDetail from \"./SongDetail\";\n\nconst App = () => {\n  return (\n    <div className=\"ui container grid\">\n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n          <SongDetail />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nconst songsReducer = () => {\n  return [\n    { title: \"Pour Some Sugar On Me\", duration: \"4:05\" },\n    { title: \"All Start\", duration: \"2:55\" },\n    { title: \"I Want It That Way\", duration: \"4:35\" },\n    { title: \"Still Of The Night\", duration: \"6:13\" },\n    { title: \"Panama\", duration: \"3:56\" }\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === \"SONG_SELECTED\") {\n    return action.payload;\n  }\n\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}